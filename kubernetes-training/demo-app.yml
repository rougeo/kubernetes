##########################################################################
### Install the Contour Ingress:                                       ###
### kubectl apply -f https://projectcontour.io/quickstart/contour.yaml ###
##########################################################################

#############
# Namespace #
#############
---
apiVersion: v1
kind: Namespace
metadata:
  name: guineeapps

############################
# Volumes PersistentVolume #
############################
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs
  labels:
    type: nfs-pv
spec:
  storageClassName: rougeo-nfs
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 157.230.67.35
    path: "/"
    readOnly: false

#################################
# Volumes PersistentVolumeClaim #
#################################
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nfs
  namespace: guineeapps
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: rougeo-nfs
  resources:
    requests:
      storage: 2Gi

############
# ConfigMap #
############
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-app
  namespace: guineeapps
data:
  author: "Diallo-Boubacar"
  project: "kubernetes-tutorial"
  project.conf: |
    country=France
    city=Paris
    code=+33


############
# Secret #
############
---
apiVersion: v1
kind: Secret
metadata:
  name: demo-app-secret
  namespace: guineeapps
type: Opaque
data:
  username: YWRtaW4=
  password: MWYyZDFlMmU2N2Rm

##############
# Deployment #
##############
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: guineeapps
spec:
  replicas: 3
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      containers:
        - name: demo-app
          image: kbosow/docs-soowcode:dev
          imagePullPolicy: Always
          env:
            - name: AUTHOR
              valueFrom:
                configMapKeyRef:
                  name: demo-app
                  key: author
          ports:
            - name: http
              containerPort: 8000
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - name: demo-app-config
              mountPath: "/config"
              readOnly: true
            - name: nfs-volume
              mountPath: "/mnt"
              subPath: "demo-app"
      volumes:
        - name: demo-app-config
          configMap:
            name: demo-app
            items:
              - key: "project.conf"
                path: "in-project.conf"
        - name: nfs-volume
          persistentVolumeClaim:
            claimName: nfs

###########
# Service #
###########
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app-service
  namespace: guineeapps
spec:
  type: NodePort
  ports:
    - name: http
      port: 80 # port(number) of the service
      targetPort: http # port (number or associated name) of the container
      protocol: TCP
      nodePort: 30001
  selector:
    app: demo-app

###########
# Ingress #
###########
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-app-ingress
  namespace: guineeapps
spec:
  ingressClassName: contour
  rules:
    - host: demo-app.rougeo.lan
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: demo-app-service
                port:
                  number: 80

#####################
# Ingress HTTPProxy #
#####################
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: demo-app-http-proxy
  namespace: guineeapps
spec:
  virtualhost:
    fqdn: web1.sg.com
  routes:
    - conditions:
        - prefix: /
      services:
        - name: demo-app-service
          port: 80
